version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - "8080:8080"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://produser:${POSTGRES_PASSWORD}@db:5432/proddb
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - MQTT_BROKER_HOST=mqtt
      - MQTT_BROKER_PORT=1883
      - MQTT_USERNAME=${MQTT_USERNAME}
      - MQTT_PASSWORD=${MQTT_PASSWORD}
    volumes:
      - app_logs:/app/logs
    depends_on:
      - db
      - mqtt
    networks:
      - aiot-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: produser
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: proddb
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - aiot-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  mqtt:
    image: eclipse-mosquitto:2.0
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto.prod.conf:/mosquitto/config/mosquitto.conf:ro
      - ./mqtt-passwd:/mosquitto/config/passwd:ro
      - mosquitto_data:/mosquitto/data
      - mosquitto_logs:/mosquitto/log
    networks:
      - aiot-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - aiot-network
    restart: unless-stopped

volumes:
  pgdata:
  app_logs:
  mosquitto_data:
  mosquitto_logs:

networks:
  aiot-network:
    driver: bridge
