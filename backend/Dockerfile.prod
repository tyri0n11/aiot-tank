# Production Dockerfile with Gunicorn
FROM python:3.11-slim as builder

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    && rm -rf /var/lib/apt/lists/*

# Create and set work directory
WORKDIR /app

# Copy requirements and add gunicorn
COPY requirements.txt .
RUN echo "gunicorn==21.2.0" >> requirements.txt

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Production stage
FROM python:3.11-slim as production

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    FLASK_APP=run.py \
    FLASK_ENV=production \
    FLASK_HOST=0.0.0.0 \
    FLASK_PORT=8080

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Set work directory
WORKDIR /app

# Copy Python packages from builder stage
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application code
COPY . .

# Create gunicorn config
RUN echo 'bind = "0.0.0.0:8080"' > gunicorn.conf.py && \
    echo 'workers = 4' >> gunicorn.conf.py && \
    echo 'worker_class = "sync"' >> gunicorn.conf.py && \
    echo 'worker_connections = 1000' >> gunicorn.conf.py && \
    echo 'timeout = 30' >> gunicorn.conf.py && \
    echo 'keepalive = 2' >> gunicorn.conf.py && \
    echo 'max_requests = 1000' >> gunicorn.conf.py && \
    echo 'max_requests_jitter = 50' >> gunicorn.conf.py && \
    echo 'preload_app = True' >> gunicorn.conf.py

# Create necessary directories and set permissions
RUN mkdir -p /app/logs /app/instance && \
    chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Use Gunicorn for production
CMD ["gunicorn", "--config", "gunicorn.conf.py", "run:app"]
